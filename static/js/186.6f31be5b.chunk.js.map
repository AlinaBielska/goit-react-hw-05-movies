{"version":3,"file":"static/js/186.6f31be5b.chunk.js","mappings":"wNAuCA,UAnCgB,WACZ,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,6GAEYC,EAAAA,EAAAA,QAAYJ,GAFxB,OAELK,EAFK,OAGXN,EAAQM,GAHG,gDAKXC,QAAQC,IAAR,MALW,yDAAH,qDAQhBJ,GAEH,GAAE,IAEiB,IAAhBL,EAAKU,QACE,qEAGP,wBACGV,EAAKW,KAAI,SAACC,EAAQC,GAAT,OACR,2BACE,0BACE,oCADF,IACmBD,EAAOE,WAE1B,uBAAIF,EAAOG,YAJJF,EADD,KAWnB,C,+ECnCKG,GAAAA,EAAAA,EAAAA,IAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,KAEJC,MAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAQ,WAAMC,GAAN,uFACiBC,EAAAA,EAAAA,IAAA,wGAC4ED,IAF7F,cACAX,EADA,yBAICA,EAASP,KAAKoB,SAJf,8FAARH,GAAQ,KAORI,OAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAS,WAAOC,EAAOJ,GAAd,uFACgBC,EAAAA,EAAAA,IAAA,mGACuEG,EADvE,iBACqFJ,IAFrG,cACDX,EADC,yBAIAA,EAASP,MAJT,gGAATqB,GAAS,KAOTE,GAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAK,WAAMA,GAAN,uFACoBJ,EAAAA,EAAAA,IAAA,8CAAiDI,EAAjD,8CADpB,cACGhB,EADH,yBAEIA,EAASP,MAFb,8FAALuB,GAAK,KAKLC,KAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAO,WAAMD,GAAN,uFACkBJ,EAAAA,EAAAA,IAAA,8CACkBI,EADlB,sDADlB,cACChB,EADD,yBAIEA,EAASP,KAAKwB,MAJhB,8FAAPA,GAAO,KAOPC,QAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAU,WAAMF,GAAN,uFACeJ,EAAAA,EAAAA,IAAA,8CACkBI,EADlB,sDADf,cACFhB,EADE,yBAIDA,EAASP,KAAKoB,SAJb,8FAAVK,EAAU,IAQNnB,EAAM,IAAIU,EAChB,K","sources":["components/Reviews/Reviews.jsx","utils/api.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport api from \"utils/api\";\n\nconst Reviews = () => {\n    const [data, setData] = useState([]);\n    const { movieID } = useParams();\n\n    useEffect(() => {\n        const getReviews = async () => {\n            try {\n                const response = await api.reviews(movieID);\n                setData(response);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getReviews();\n        // eslint-disable-next-line\n    }, []);\n\n    if (data.length === 0) {\n        return <p>We don't have any reviews for this movie</p>\n    } else {\n        return (\n        <ul>\n          {data.map((review, idx) => (\n            <li key={idx}>\n              <p>\n                <b>Author: </b> {review.author}\n              </p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      );\n    }\n};\n\nexport default Reviews;","import axios from 'axios';\n\nclass apiFetch {\n  \n  trend = async page => {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=41e82972d79cb88ec6adf4cd9cbe70d2&page=${page}`\n    );\n    return response.data.results;\n  };\n\n  search = async (query, page) => {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=41e82972d79cb88ec6adf4cd9cbe70d2&query=${query}&page=${page}`\n    );\n    return response.data;\n  };\n\n  id = async id => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie//${id}?api_key=41e82972d79cb88ec6adf4cd9cbe70d2`);\n    return response.data;\n  };\n\n  cast = async id => {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie//${id}/credits?api_key=41e82972d79cb88ec6adf4cd9cbe70d2`\n    );\n    return response.data.cast;\n  };\n\n  reviews = async id => {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie//${id}/reviews?api_key=41e82972d79cb88ec6adf4cd9cbe70d2`\n    );\n    return response.data.results;\n  };\n}\n\nconst api = new apiFetch();\nexport default api;"],"names":["useState","data","setData","movieID","useParams","useEffect","getReviews","api","response","console","log","length","map","review","idx","author","content","apiFetch","trend","page","axios","results","search","query","id","cast","reviews"],"sourceRoot":""}
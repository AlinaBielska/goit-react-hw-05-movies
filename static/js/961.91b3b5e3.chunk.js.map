{"version":3,"file":"static/js/961.91b3b5e3.chunk.js","mappings":"gOAyFA,UArFqB,WAAO,IAAD,IACvB,GAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7CC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiB,SAAAC,GACnB,IAAMC,EAASD,EAAIC,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAClDC,EAAQC,KAAKC,KAA2B,GAAtBR,EAAG,cACrBS,EAAa,CACfC,IAAI,mCAAD,OAAqCV,EAAG,aAC3CW,MAAOX,EAAIW,MACXV,OAAAA,EACAK,MAAAA,EACAM,SAAUZ,EAAIY,UAElBrB,EAAWkB,EACd,EAEKI,EAAK,mCAAG,6GAEiBC,EAAAA,EAAAA,GAAOtB,GAFxB,OAEAuB,EAFA,OAGNhB,EAAegB,GAHT,gDAKNC,QAAQC,IAAR,MALM,yDAAH,qDAQXJ,GAGH,GAAE,IAEH,IAAQH,EAAwCpB,EAAxCoB,IAAKC,EAAmCrB,EAAnCqB,MAAOV,EAA4BX,EAA5BW,OAAQK,EAAoBhB,EAApBgB,MAAOM,EAAatB,EAAbsB,SAEnC,OACI,iCACI,4BACI,SAAC,KAAD,CAAMM,GAAIxB,EAAV,2BACA,4BACI,gBACIyB,IACIT,EAAG,8CAC0CA,GACvC,2DAEVU,IAAKT,EACLU,MAAM,SAEV,4BACI,wBAAKV,KACL,yCAAiBL,MACjB,4BACI,sCACA,uBAAIM,QAER,4BACI,oCACA,uBAAIX,iBAKpB,4BACI,oDACA,2BACI,yBACI,SAAC,KAAD,CAAMiB,GAAG,OAAT,qBAIJ,yBACI,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAMZ,SAAC,EAAAI,SAAD,CAAUC,SAAU,aAApB,UACI,SAAC,KAAD,QAIf,C,+ECrFKC,GAAAA,EAAAA,EAAAA,IAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,KAEJC,MAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAQ,WAAMC,GAAN,uFACiBC,EAAAA,EAAAA,IAAA,wGAC4ED,IAF7F,cACAX,EADA,yBAICA,EAASa,KAAKC,SAJf,8FAARJ,GAAQ,KAORK,OAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAS,WAAOC,EAAOL,GAAd,uFACgBC,EAAAA,EAAAA,IAAA,mGACuEI,EADvE,iBACqFL,IAFrG,cACDX,EADC,yBAIAA,EAASa,MAJT,gGAATE,GAAS,KAOTE,GAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAK,WAAMA,GAAN,uFACoBL,EAAAA,EAAAA,IAAA,8CAAiDK,EAAjD,8CADpB,cACGjB,EADH,yBAEIA,EAASa,MAFb,8FAALI,GAAK,KAKLC,KAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAO,WAAMD,GAAN,uFACkBL,EAAAA,EAAAA,IAAA,8CACkBK,EADlB,sDADlB,cACCjB,EADD,yBAIEA,EAASa,KAAKK,MAJhB,8FAAPA,GAAO,KAOPC,QAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAU,WAAMF,GAAN,uFACeL,EAAAA,EAAAA,IAAA,8CACkBK,EADlB,sDADf,cACFjB,EADE,yBAIDA,EAASa,KAAKC,SAJb,8FAAVK,EAAU,IAQNpB,EAAM,IAAIU,EAChB,K","sources":["pages/MovieDetails/MovieDetails.jsx","utils/api.js"],"sourcesContent":["import { useEffect, useState, Suspense } from \"react\";\nimport { useParams, useLocation, Link, Outlet } from \"react-router-dom\";\nimport api from \"utils/api\";\n\nconst MovieDetails = () => {\n    const [details, setDetails] = useState([]);\n    const { movieID } = useParams();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/\";\n\n    useEffect(() => {\n        const dataConversion = obj => {\n            const genres = obj.genres.map(genre => genre.name).join(', ');\n            const score = Math.ceil(obj['vote_average'] * 10);\n            const newDetails = {\n                img: `https://image.tmdb.org/t/p/w500/${obj['poster_path']}`,\n                title: obj.title,\n                genres,\n                score,\n                overview: obj.overview,\n            };\n            setDetails(newDetails);\n        };\n\n        const fetch = async () => {\n            try {\n                const response = await api.id(movieID);\n                dataConversion(response);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        fetch();\n\n        // eslint-disable-next-line\n    }, []);\n\n    const { img, title, genres, score, overview } = details;\n\n    return (\n        <>\n            <div>\n                <Link to={backLinkHref}>Back to Home</Link>\n                <div>\n                    <img\n                        src={\n                            img\n                                ? `https://www.themoviedb.org/t/p/w500/${img}`\n                                : 'https://www.freeiconspng.com/uploads/no-image-icon-6.png'\n                        }\n                        alt={title}\n                        width=\"240\"\n                    />\n                    <div>\n                        <h3>{title}</h3>\n                        <h5>User Score: {score}</h5>\n                        <div>\n                            <h5>Overview</h5>\n                            <p>{overview}</p>\n                        </div>\n                        <div>\n                            <h5>Genres</h5>\n                            <p>{genres}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div>\n                <h3>Additional information</h3>\n                <ul>\n                    <li>\n                        <Link to=\"cast\">\n                            Cast\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"reviews\">\n                            Reviews\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n            <Suspense fallback={\"Loading...\"}>\n                <Outlet />\n            </Suspense>\n        </>\n    );\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\nclass apiFetch {\n  \n  trend = async page => {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=41e82972d79cb88ec6adf4cd9cbe70d2&page=${page}`\n    );\n    return response.data.results;\n  };\n\n  search = async (query, page) => {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=41e82972d79cb88ec6adf4cd9cbe70d2&query=${query}&page=${page}`\n    );\n    return response.data;\n  };\n\n  id = async id => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie//${id}?api_key=41e82972d79cb88ec6adf4cd9cbe70d2`);\n    return response.data;\n  };\n\n  cast = async id => {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie//${id}/credits?api_key=41e82972d79cb88ec6adf4cd9cbe70d2`\n    );\n    return response.data.cast;\n  };\n\n  reviews = async id => {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie//${id}/reviews?api_key=41e82972d79cb88ec6adf4cd9cbe70d2`\n    );\n    return response.data.results;\n  };\n}\n\nconst api = new apiFetch();\nexport default api;"],"names":["useState","details","setDetails","movieID","useParams","backLinkHref","useLocation","state","from","useEffect","dataConversion","obj","genres","map","genre","name","join","score","Math","ceil","newDetails","img","title","overview","fetch","api","response","console","log","to","src","alt","width","Suspense","fallback","apiFetch","trend","page","axios","data","results","search","query","id","cast","reviews"],"sourceRoot":""}
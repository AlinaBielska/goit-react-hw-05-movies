{"version":3,"file":"static/js/367.2a5285fa.chunk.js","mappings":"6PAaA,EAXmB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SAClB,OACI,kBAAMA,SAAUA,EAAhB,WACI,kBAAOC,KAAK,WACZ,mBAAQC,KAAK,SAAb,sBAKX,E,SCQD,EAhBmB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,wBACKF,EAAKG,KAAI,SAAAC,GAAK,OACX,yBACI,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAxC,SACKG,EAAMK,SAFNL,EAAME,GADJ,KAS1B,EC+BD,EA1Ce,WAAO,IAAD,EACjB,GAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOV,EAAP,KAAaW,EAAb,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACN,GAAc,KAAVF,EAAJ,CACA,IAAMG,EAAW,mCAAG,6GAEWC,EAAAA,EAAAA,OAAWJ,EARjC,GAMW,OAENK,EAFM,OAGZT,EAAQS,EAASC,SAHL,gDAKZC,QAAQC,IAAR,MALY,yDAAH,qDAQjBL,GATwB,CAW3B,GAAE,CAACH,IAgBJ,OACI,4BACI,SAAC,EAAD,CAAYlB,SAhBC,SAAA2B,GACjBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAQF,EAAKG,SAASd,MAAMe,MAAMC,OAE1B,KAAVH,GAKJd,EAAgB,CAAEC,MAAOa,IACzBF,EAAKM,SALDC,MAAM,uBAMb,IAKQjC,IAAQ,SAAC,EAAD,CAAYA,KAAMA,MAGtC,C,+EC5CKkC,GAAAA,EAAAA,EAAAA,IAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,KAEJC,MAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAQ,WAAMC,GAAN,uFACiBC,EAAAA,EAAAA,IAAA,wGAC4ED,IAF7F,cACAhB,EADA,yBAICA,EAASpB,KAAKqB,SAJf,8FAARc,GAAQ,KAORG,OAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAS,WAAOvB,EAAOqB,GAAd,uFACgBC,EAAAA,EAAAA,IAAA,mGACuEtB,EADvE,iBACqFqB,IAFrG,cACDhB,EADC,yBAIAA,EAASpB,MAJT,gGAATsC,GAAS,KAOThC,GAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAK,WAAMA,GAAN,uFACoB+B,EAAAA,EAAAA,IAAA,8CAAiD/B,EAAjD,8CADpB,cACGc,EADH,yBAEIA,EAASpB,MAFb,8FAALM,GAAK,KAKLiC,KAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAO,WAAMjC,GAAN,uFACkB+B,EAAAA,EAAAA,IAAA,8CACkB/B,EADlB,sDADlB,cACCc,EADD,yBAIEA,EAASpB,KAAKuC,MAJhB,8FAAPA,GAAO,KAOPC,QAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAU,WAAMlC,GAAN,uFACe+B,EAAAA,EAAAA,IAAA,8CACkB/B,EADlB,sDADf,cACFc,EADE,yBAIDA,EAASpB,KAAKqB,SAJb,8FAAVmB,EAAU,IAQNrB,EAAM,IAAIe,EAChB,K","sources":["components/FormSearch/FormSearch.jsx","components/ListMovies/ListMovies.jsx","pages/Movies/Movies.jsx","utils/api.js"],"sourcesContent":["import PropTypes from \"prop-types\";\n    \nconst FormSearch = ({ onSubmit }) => {\n    return (\n        <form onSubmit={onSubmit}>\n            <input name=\"query\"></input>\n            <button type=\"submit\">\n                Search\n            </button>\n        </form>\n    )\n};\n\nexport default FormSearch;\n\nFormSearch.propTypes = {\n    onSubmit: PropTypes.func,\n};","import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst ListMovies = ({ data }) => {\n    const location = useLocation();\n\n    return (\n        <ul>\n            {data.map(movie => (\n                <li key={movie.id}>\n                    <Link to={`${movie.id}`} state={{ from: location }} >\n                        {movie.title}\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    )\n};\n\nexport default ListMovies;\n\nListMovies.propTypes = {\n    data: PropTypes.array.isRequired,\n};","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport api from \"utils/api\";\nimport FormSearch from \"components/FormSearch/FormSearch\";\nimport ListMovies from \"components/ListMovies/ListMovies\";\n\nconst Movies = () => {\n    const [data, setData] = useState([]);\n    const page = 1;\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\") ?? \"\";\n\n    useEffect(() => {\n        if (query === \"\") return;\n        const searchMovie = async () => {\n            try {\n                const response = await api.search(query, page);\n                setData(response.results);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        searchMovie();\n        // eslint-disable-next-line\n    }, [query]);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        const input = form.elements.query.value.trim();\n\n        if (input === '') {\n            alert(`Please type anything`);\n            return;\n        }\n\n        setSearchParams({ query: input });\n        form.reset();\n    };\n\n    return (\n        <div>\n            <FormSearch onSubmit={handleSubmit} />\n            {data && <ListMovies data={data} />}\n        </div>\n    );\n};\n\nexport default Movies;","import axios from 'axios';\n\nclass apiFetch {\n  \n  trend = async page => {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=41e82972d79cb88ec6adf4cd9cbe70d2&page=${page}`\n    );\n    return response.data.results;\n  };\n\n  search = async (query, page) => {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=41e82972d79cb88ec6adf4cd9cbe70d2&query=${query}&page=${page}`\n    );\n    return response.data;\n  };\n\n  id = async id => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie//${id}?api_key=41e82972d79cb88ec6adf4cd9cbe70d2`);\n    return response.data;\n  };\n\n  cast = async id => {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie//${id}/credits?api_key=41e82972d79cb88ec6adf4cd9cbe70d2`\n    );\n    return response.data.cast;\n  };\n\n  reviews = async id => {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie//${id}/reviews?api_key=41e82972d79cb88ec6adf4cd9cbe70d2`\n    );\n    return response.data.results;\n  };\n}\n\nconst api = new apiFetch();\nexport default api;"],"names":["onSubmit","name","type","data","location","useLocation","map","movie","to","id","state","from","title","useState","setData","useSearchParams","searchParams","setSearchParams","query","get","useEffect","searchMovie","api","response","results","console","log","e","preventDefault","form","currentTarget","input","elements","value","trim","reset","alert","apiFetch","trend","page","axios","search","cast","reviews"],"sourceRoot":""}